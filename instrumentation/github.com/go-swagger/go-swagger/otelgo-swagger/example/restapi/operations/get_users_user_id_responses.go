// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"go.opentelemetry.io/opentelemetry-go-contrib/instrumentation/github.com/go-swagger/go-swagger/otelgo-swagger/example/models"
)

// GetUsersUserIDOKCode is the HTTP code returned for type GetUsersUserIDOK
const GetUsersUserIDOKCode int = 200

/*GetUsersUserIDOK user info

swagger:response getUsersUserIdOK
*/
type GetUsersUserIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewGetUsersUserIDOK creates GetUsersUserIDOK with default headers values
func NewGetUsersUserIDOK() *GetUsersUserIDOK {

	return &GetUsersUserIDOK{}
}

// WithPayload adds the payload to the get users user Id o k response
func (o *GetUsersUserIDOK) WithPayload(payload *models.User) *GetUsersUserIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users user Id o k response
func (o *GetUsersUserIDOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersUserIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersUserIDNotFoundCode is the HTTP code returned for type GetUsersUserIDNotFound
const GetUsersUserIDNotFoundCode int = 404

/*GetUsersUserIDNotFound user not found

swagger:response getUsersUserIdNotFound
*/
type GetUsersUserIDNotFound struct {
}

// NewGetUsersUserIDNotFound creates GetUsersUserIDNotFound with default headers values
func NewGetUsersUserIDNotFound() *GetUsersUserIDNotFound {

	return &GetUsersUserIDNotFound{}
}

// WriteResponse to the client
func (o *GetUsersUserIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
